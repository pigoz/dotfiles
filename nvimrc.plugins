call plug#begin('~/.local/share/nvim/plugged')

" search, completion, code analysis and general IDE stuff
Plug 'sheerun/vim-polyglot'

set completeopt-=preview

Plug 'neoclide/coc.nvim', {'branch': 'release'}

let g:coc_global_extensions = [
\ 'coc-emoji', 'coc-eslint', 'coc-prettier',  'coc-tsserver', 'coc-css',
\ 'coc-json', 'coc-pyls', 'coc-yaml'
\]

let g:coc_node_path = "/Users/pigoz/.nvm/versions/node/v18.8.0/bin/node"

inoremap <silent><expr> <c-space> coc#refresh()

inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm()
                              \: "\<C-g>u\<CR>\<c-r>=coc#on_enter()\<CR>"

nmap <silent> <D-k> <Plug>(coc-fix-current)
nmap <silent> <D-l> :call CocAction('doHover')<CR>

" Use `lp` and `ln` for navigate diagnostics
nmap <silent> <leader>lp <Plug>(coc-diagnostic-prev)
nmap <silent> <leader>ln <Plug>(coc-diagnostic-next)

" Remap keys for gotos
nmap <silent> <leader>ld <Plug>(coc-definition)
nmap <silent> <leader>lt <Plug>(coc-type-definition)
nmap <silent> <leader>li <Plug>(coc-implementation)
nmap <silent> <leader>lf <Plug>(coc-references)

" Remap for rename current word
nmap <leader>lr <Plug>(coc-rename)

Plug 'tpope/vim-fugitive' " for :Gblame
Plug 'nvim-lualine/lualine.nvim'
set laststatus=2

Plug 'ctrlpvim/ctrlp.vim'
map <D-b> :CtrlPBuffer<CR>
imap <D-b> :CtrlPBuffer<CR>
map <D-t> :CtrlP<CR>
imap <D-t> :CtrlP<CR>
let g:ctrlp_max_height = 30
let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git\|page-data\|vendor|public|picons'

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
Plug 'kyazdani42/nvim-web-devicons'
Plug 'kyazdani42/nvim-tree.lua'

" Toggle drawer bindings
map <D-d> :NvimTreeToggle<CR>
imap <D-d> <Esc>:NvimTreeToggle<CR>

" colorschemes
Plug 'navarasu/onedark.nvim'

call plug#end()

lua << EOF
require'nvim-web-devicons'.setup {
 -- globally enable default icons (default to false)
 -- will get overriden by `get_icons` option
 default = true;
}
require("nvim-tree").setup()
require("lualine").setup()
EOF
