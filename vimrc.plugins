filetype off             " required by Vundle

" Vundle setup
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" manage Vundle with Vundle
Bundle 'gmarik/vundle'

" search, completion, code analysis and general IDE stuff
Bundle 'vim-ruby/vim-ruby'
if has("autocmd")
  autocmd FileType ruby set omnifunc=rubycomplete#Complete
  autocmd FileType ruby let g:rubycomplete_buffer_loading=1
  autocmd FileType ruby let g:rubycomplete_classes_in_global=1
endif

" clojure
Bundle 'tpope/vim-fireplace'
Bundle 'tpope/vim-classpath'
Bundle 'guns/vim-clojure-static'
Bundle 'guns/vim-clojure-highlight'
if has("autocmd")
  autocmd FileType clojure set iskeyword+=-
  " visual mode: execute selected block
  autocmd FileType clojure vmap <D-r> :Eval<CR>
  " normal mode: eval innermost form
  autocmd FileType clojure nmap <D-r> cpp
  autocmd FileType clojure map <D-k> K

  " for overtone
  autocmd FileType clojure map <D-1> :Eval (stop)<CR>
end

Bundle 'Valloric/YouCompleteMe'
set completeopt-=preview
let g:ycm_key_detailed_diagnostics = '<leader>c'
let g:ycm_confirm_extra_conf = 0

let g:ycm_semantic_triggers = {
 \   'clojure': ['(','re![a-zA-Z0-9\-_/#]\s'],
 \ }

Bundle 'mileszs/ack.vim'
let g:ackprg = 'ag --nogroup --nocolor --column'

Bundle 'scrooloose/syntastic'
let g:syntastic_error_symbol='✗'
let g:syntastic_warning_symbol='⚠'

" ui
Bundle 'tpope/vim-fugitive'
Bundle 'Lokaltog/vim-powerline'
set laststatus=2

" navigation
Bundle 'Lokaltog/vim-easymotion'
let g:EasyMotion_leader_key = 'm'

Bundle 'kien/ctrlp.vim'
map <D-b> :CtrlPBuffer<CR>
imap <D-b> :CtrlPBuffer<CR>
map <D-t> :CtrlP<CR>
imap <D-t> :CtrlP<CR>

let g:ctrlp_max_height = 30

Bundle 'vim-scripts/buftabs'
Bundle 'vim-scripts/taglist.vim'
Bundle 'mattn/zencoding-vim'
if !exists('g:user_zen_leader_key')
  let g:user_zen_leader_key = '<Leader>k'
endif

" Taglist
map <Leader>l :TlistToggle<CR>
let Tlist_Ctags_Cmd = g:ctags_path
let Tlist_Use_Right_Window = 1
let Tlist_WinWidth = 35
let Tlist_Enable_Fold_Column = 0
let Tlist_Show_One_File = 1

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" NERDTree
Bundle 'scrooloose/nerdtree'

" Toggle drawer bindings
map <D-d> :NERDTreeToggle<CR>
imap <D-d> <Esc>:NERDTreeToggle<CR>

let NERDTreeShowHidden=1      " Show dotfiles in NERDTree
let NERDTreeHijackNetrw = 1   " Don't hijack Netrw
let NERDTreeIgnore = ['\.pyc$', '\.d$', '\.o$', '^.waf-']

autocmd vimenter * if !argc() | NERDTree | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") &&
  \ b:NERDTreeType == "primary") | q | endif

" colorschemes
Bundle 'pigoz/herald'
Bundle 'amdt/vim-niji'

" languages packages
Bundle 'cakebaker/scss-syntax.vim'
Bundle 'pangloss/vim-javascript'
Bundle 'kchmck/vim-coffee-script'
Bundle 'elixir-lang/vim-elixir'
Bundle 'tikhomirov/vim-glsl'
Bundle 'wting/rust.vim'
Bundle 'digitaltoad/vim-jade'
